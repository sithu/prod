<link rel="stylesheet" type="text/css" href="/styles/style.css" />

<h2>Update BOM</h2>
<div id="bomInfo">
    <table>
        <tr><td>Name</td><td>Version</td></tr>
        <tr><td id="bomName"></td><td id="bomVersion"></td></tr>
    </table>
</div>
<div id="errorText"></div>
<button onclick="bomView.save()">Update BOM</button>
<button onclick="bomView.destroy()">Delete BOM</button>
<h3>Select dependencies:</h3>
<table style="width:450; text-align:left">
    <tr><th>Available Components</th><th>Dependencies</th></tr>
    <tr><td colspan="2"><div id="depsChooser"></div></td></tr>
</table>
<div id="sourceList"></div>
<div id="destList"></div>

<script>
    var BOMModel = Backbone.Model.extend({
        urlRoot: '/api/v1/bom'
    });
    
    var BOMCollection = Backbone.Collection.extend({
        url: '/api/v1/bom',
        model: BOMModel,
        comparator: 'name'
    });
 
    _.templateSettings = {
        interpolate : /\{\{(.+?)\}\}/g
    };
    
    var BOMNewView = Backbone.View.extend({
        el: "#depsChooser",
        initialize: function () {
            _.bindAll(this);
        },
        load: function() {
            this.model.fetch( {
                success: this.loadCompleteHandler,
                error: this.errorHandler
            })
        },
        loadCompleteHandler: function() {
            var m = this.model.toJSON();
            $("#bomName").html(m.name);
            $("#bomVersion").html(m.version);
            bomDepsView.load();
        },
        errorHandler: function(model, response) {
            console.log("Error loading BOM: " + response.responseText);
            $("#errorText").html("Error loadking BOM: " + response.responseText);
        },
        save: function() {
            var deps = [];
            chooser.getDestinationList().children().each(function() {
                console.log("dpe is " + $(this).text());
                var data = $(this).text().split(",");
                deps.push({name: $.trim(data[0]), version: $.trim(data[1])});
            });
            this.model.set('deps', deps);
            this.model.save( null, {
              success: this.saveCompleteHandler,
              error: function(model, response) {
                console.log("Error saving BOM: " + response.responseText);
                $("#errorText").html("Error saving BOM: " + response.responseText);
              }
            });
        },
        destroy: function() {
            this.model.destroy({
                success: function() {
                    $("#errorText").html("BOM deleted");
               }
            });
        },
        saveCompleteHandler: function(){
            $("#errorText").html("BOM successfully updated");
            this.render();
        },
        render: function () {
            return this;
        }
    });
    
    var BOMDepsView = Backbone.View.extend({
        el: "#depsChooser",
        initialize: function () {
            _.bindAll(this);
        }, 
        load: function() {
            this.collection.fetch( {
              success: this.loadCompleteHandler,
              error: this.errorHandler
            });
        }, 
        template: _.template("<div>{{ name }}, {{version}}</div>"),
        loadCompleteHandler: function() {
            chooser = $("#depsChooser").fieldChooser();
            this.collection.each(function(bom) {
                b = bom.toJSON();
                current = bomView.model.toJSON();
                // Don't add the bom being edited to the list of available dependencies.
                if (!(current.name == b.name && current.version == b.version)) {
                    if (isMemberOf(b, current.deps)) {
                        $("#destList").append(this.template(bom.toJSON()));
                    }
                    else {
                        $("#sourceList").append(this.template(bom.toJSON()));
                    }
                }
            }, this);
            chooser.getSourceList().add($("#sourceList").children());
            chooser.getDestinationList().add($("#destList").children());
            
            this.render();
        },
        errorHandler: function(model, response) {
            console.log("Error loading BOM list: " + response.responseText);
            $("#errorText").html("Error loading BOM list: " + response.responseText);
        },
        render: function () {
            return this;
        }
    });
    
    var bomm = new BOMModel({id: '<%= id %>'});
    var bomView = new BOMNewView({model:  bomm});
    var boms = new BOMCollection();
    var bomDepsView = new BOMDepsView({collection: boms});
    var chooser;
    
    bomView.load();
    
    function isMemberOf(bom, depList) {
        if (depList != undefined) {
            for (var i=0; i < depList.length; i++ ) {
                if (bom.name == depList[i].name && bom.version == depList[i].version) {
                    return true;
                }
            }
        }
        return false;
    }
    
</script>
